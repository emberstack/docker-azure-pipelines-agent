name: Pipeline

on:
  push:
    paths:
      - "src/*"
      - ".github/workflows/*"
jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    env:
      version: 2.2.${{github.run_number}}
      imageRepository: "emberstack/azure-pipelines-agent"
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:

      - name: tools - helm - install
        uses: azure/setup-helm@v1

      - name: tools - docker - login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: artifacts - prepare directories
        run: mkdir -p .artifacts/helm

      - name: checkout
        uses: actions/checkout@v2

      - name: helm - import README
        run: cp README.md src/helm/azure-pipelines-agent/README.md

      - name: helm - template chart
        run: helm package --destination .artifacts/helm --version ${{env.version}} --app-version ${{env.version}} src/helm/azure-pipelines-agent

      - name: "artifacts - upload - helm chart"
        uses: actions/upload-artifact@v2
        with:
          name: helm
          path: .artifacts/helm

      # - name: "docker - build and publish"
      #   run: |
      #     docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      #     # docker buildx rm builder
      #     docker buildx create --name builder --driver docker-container --use
      #     docker buildx inspect --bootstrap
      #     docker buildx build --push --platform linux/amd64 -t ${{env.imageRepository}}:build-${{env.version}}-amd64   -f src/docker/Dockerfile src/docker 
      #     docker buildx build --push --platform linux/arm   -t ${{env.imageRepository}}:build-${{env.version}}-arm32v7 -f src/docker/Dockerfile src/docker
      #     docker buildx build --push --platform linux/arm64 -t ${{env.imageRepository}}:build-${{env.version}}-arm64v8 -f src/docker/Dockerfile src/docker
      #     docker pull ${{env.imageRepository}}:build-${{env.version}}-amd64
      #     docker pull ${{env.imageRepository}}:build-${{env.version}}-arm32v7
      #     docker pull ${{env.imageRepository}}:build-${{env.version}}-arm64v8
      #     docker manifest create  ${{env.imageRepository}}:build-${{env.version}} ${{env.imageRepository}}:build-${{env.version}}-amd64  ${{env.imageRepository}}:build-${{env.version}}-arm32v7  ${{env.imageRepository}}:build-${{env.version}}-arm64v8
      #     docker manifest inspect ${{env.imageRepository}}:build-${{env.version}}
      #     docker manifest push    ${{env.imageRepository}}:build-${{env.version}}

  cd:
    name: CD
    needs: ci
    runs-on: ubuntu-latest
    env:
      version: 2.2.${{github.run_number}}
      imageRepository: "emberstack/azure-pipelines-agent"
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:
      - name: tools - helm - install
        uses: azure/setup-helm@v1

      - name: tools - docker - login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: "artifacts - download - helm chart"
        uses: actions/download-artifact@v2
        with:
          name: helm
          path: .artifacts/helm

      - name: checkout
        uses: actions/checkout@v2
        with:
          repository: emberstack/test
          token:  ${{ secrets.ES_GITHUB_PAT }}
          path: helm-charts


      - name: Update changes in GitHub repository
        run: |
          mkdir -p helm-charts/charts
          cp .artifacts/helm/azure-pipelines-agent-${{env.version}}.tgz  helm-charts/charts

          cd helm-charts
          # rm index.yaml -f
          helm repo index ./

          git config user.name "Romeo Dumitrescu"
          git config user.email "5931333+winromulus@users.noreply.github.com"
          git add .
          git status
          git commit -m "Added azure-pipelines-agent-${{env.version}}.tgz"
          git push

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          repository: emberstack/docker-azure-pipelines-agent
          body_path: ${{ github.workspace }}-CHANGELOG.txt
          tag_name: v${{env.version}}
          body: The release process is automated.
          token: ${{ secrets.ES_GITHUB_PAT }}